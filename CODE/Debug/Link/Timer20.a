;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void main(void) {
; 0000 0002 void main(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0003     DDRB = 0xff;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0004     ETIMSK = 0x01;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0005     TCCR1A = 0x04;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0006     TCCR1B = 0x05;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0007     TCNT1 = 0x0000;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0008     OCR1CH = (7812 & 0xff00) >> 8;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0009     OCR1CL = 7812 & 0xff;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 000A     SREG = 0x80;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 000B     while(1);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 000C }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;interrupt [TIM1_COMPC] void timer1_compc(void) {
; 0000 000D interrupt [25] void timer1_compc(void) {
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 000E     TCNT1 = 0x0000;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 000F }
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
