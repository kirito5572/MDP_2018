;/*
; * Timer4.c
; *
; * Created: 2018-05-17 ¿ÀÈÄ 7:10:42
; * Author: Administrator
; */
; #include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
; unsigned long count;
; unsigned int FNDcount;
; void FNDN();
; void delay();
; char FND[10] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};

	.DSEG
; void main(void) {
; 0000 000D void main(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 000E     DDRC = 0xff;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000F     DDRA = 0xff;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0010     DDRB = 0xff;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0011     TCNT0 = 0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0012     TIMSK = 0x01;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0013     TCCR0 = 0x05;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0014     SREG = 0x80;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0015     while(1){
;PCODE: $0000001C VOL: 0
; 0000 0016         FNDN();
;PCODE: $0000001D VOL: 0
; 0000 0017     }
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0018 
; 0000 0019  }
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; interrupt [TIM0_OVF] void TiM_OVF(void)
; 0000 001B  {
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001C      count++;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 001D      if(count%10 == 0) {
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 001E         FNDN();
;PCODE: $0000002E VOL: 0
; 0000 001F         FNDcount++;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0020      }
; 0000 0021  }
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; void FNDN() {
; 0000 0022 void FNDN() {
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0023     unsigned char st,nd;
; 0000 0024     nd = (FNDcount/10)%6;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;	st -> R17
;	nd -> R16
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0025     st = FNDcount%10;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0026     PORTA = 0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0027     PORTA = 0b00000001;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0028     PORTB = FND[st];
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0029     delay();
;PCODE: $0000004F VOL: 0
; 0000 002A     PORTA = 0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 002B     PORTA = 0b00000010;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 002C     PORTB = FND[nd];
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 002D     delay();
;PCODE: $00000059 VOL: 0
; 0000 002E }
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;void delay() {
; 0000 002F void delay() {
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0030     while(1) {
;PCODE: $0000005F VOL: 0
; 0000 0031         if(count%2 == 0) {
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0032             break;
;PCODE: $00000063 VOL: 0
; 0000 0033         }
; 0000 0034     }
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0035 }
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
