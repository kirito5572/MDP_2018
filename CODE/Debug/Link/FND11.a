;//0410 17:35:50
;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#define FND PORTB   //FND
;#define LED PORTC   //LEDs
; void main() {
; 0000 0007 void main() {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0008     char num[10]= {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f}; //0~9 숫자 지정
; 0000 0009     unsigned int up = 0;
; 0000 000A     unsigned char one,two,three,four;   //각 자리수 숫자 저장
; 0000 000B     DDRF = 0xf0;                        //FND자리 출력설정
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;	num -> Y+0
;	up -> R16,R17
;	one -> R19
;	two -> R18
;	three -> R21
;	four -> R20
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 000C     DDRB = 0xff;                        //FND출력설정
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 000D     DDRC = 0xff;                        //LED출력설정
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 000E     FND = 0x00;                         //FND초기값(ALL OFF)
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 000F     LED = 0xff;                         //LED초기값(ALL OFF)
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0010     while(1) {
;PCODE: $00000020 VOL: 0
; 0000 0011         for(;up != 9999; up++) {
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0012             four = (up/1000)%10;        //4번째 자리 숫자 저장
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0013             three = (up/100)%10;        //3번째 자리 숫자 저장
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0014             two = (up/10)%10;           //2번째 자리 숫자 저장
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0015             one = up%10;                //1번째 자리 숫자 저장
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0016             PORTF = 0b11100000;         //4번째 자리 숫자 출력
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0017             FND = num[four];
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0018             delay_ms(20);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0019             PORTF = 0b11110000;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 001A             PORTF = 0b11010000;         //3번째 자리 숫자 출력
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 001B             FND = num[three];
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 001C             delay_ms(20);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 001D             PORTF = 0b11110000;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 001E             PORTF = 0b10110000;         //2번째 자리 숫자 출력
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 001F             FND = num[two];
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0020             delay_ms(20);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0021             PORTF = 0b11110000;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0022             PORTF = 0b01110000;         //1번째 자리 숫자 출력
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0023             FND = num[one];
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0024             delay_ms(20);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0025             PORTF = 0b11110000;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0026 
; 0000 0027             if(up >= 1000) {
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0028                 if((two % 2) == 0) {    //2번째 자리 숫자가 짝수 일때 On
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0029                     LED = 0xff;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 002A                 }
; 0000 002B                 else {                  //2번째 자리 숫자가 짝수 일때 Off
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 002C                     LED = 0x00;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 002D                 }
;PCODE: $00000084 VOL: 0
; 0000 002E             }
; 0000 002F         }
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0030         up = 0;                         //9999까지 세면 다시 처음으로
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0031     }
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0032  }
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
