;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;unsigned char FND[10] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};

	.DSEG
;unsigned char led = 0xfe;
;unsigned char count = 0, seg = 0;
;void main(void) {
; 0000 0005 void main(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0006     DDRB = 0xff;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0007     DDRC = 0xff;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0008     DDRA = 0xff;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0009     PORTF = 0b11100000;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 000A     TIMSK = 0x01;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 000B     TCCR0 = 0b0000111;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 000C     TCNT0 = 0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 000D     SREG = 0x80;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 000E     PORTA = 0x01;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 000F     PORTC = led;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0010     PORTB = FND[seg];
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0011 }
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;interrupt [TIM0_OVF] void timer_int0(void) {
; 0000 0012 interrupt [17] void timer_int0(void) {
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0013     count++;
;PCODE: $0000002C VOL: 0
; 0000 0014     if(count == 61) {
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0015         count=0;
;PCODE: $00000030 VOL: 0
; 0000 0016         seg++;
;PCODE: $00000031 VOL: 0
; 0000 0017         if(seg == 8) {
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0018             seg = 0;
;PCODE: $00000035 VOL: 0
; 0000 0019         }
; 0000 001A         led = (led << 1) | 0x01;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 001B         if(led == 0xff) {
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 001C             led = 0xfe;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 001D         }
; 0000 001E         PORTC = led;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 001F         PORTB = FND[seg];
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0020     }
; 0000 0021 }
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
